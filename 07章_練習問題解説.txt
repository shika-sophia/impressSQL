■７章 副問い合わせ (サブグエリ) / p229

◆練習問題７－１
言葉の穴埋め問題。テキスト本文を参照。

◆練習問題７－２
(1)SQL文１のサブグエリ内側
    SELECT SUM(レンタル日数)
    FROM レンタル
    WHERE 車種コード = 'E01'

=> レンタル_tb(テーブル)から、E01がレンタルされた日数の合計 3を集計。

＊SQL文１の全体
    SELECT 価格 * ( 3 )
    FROM 料金
    WHERE WHERE 車種コード = 'E01'
    ;
=> サブグエリ部分が 3 に置き換わり、EO1の価格 8400 * 3 を行い表示する。


(2)SQL文２のサブクエリ内側
    SELECT 車種コード
    FROM レンタル
    WHERE レンタル日数 > 1
=> レンタル日数１より大きい車種コードのみ取得 => S01, E01, SO2

＊SQL文全体
    SELECT 車種コード, 車種名
    FROM 料金
    WHERE 車種コード IN (S01, E01, SO2)
    ORDER BY 車種コード
    ;
=> 上記の車種コードと車種名を取得


(3)SQL文３のサブクエリ
    SELECT 車種コード, SUM(レンタル日数) AS 日数
    FROM レンタル
    GROUP BY 車種コード
=> 車種コードごとのレンタル日数の合計 => S02 6, S01 3, E01 3

＊SQL文３の全体
    SELECT SUM(SUB.日数) AS 合計日数,
           COUNT(SUB.車種コード) AS 車種数
    FROM (  ) AS SUB
    ;
=>サブクエリの各列を集計して、合計日数 12, 車種数 3
=>結果よりも、この表記法に注目すべき。
ASによる別名をつけ、「SUB.日数」「SUB.車種コード」などと表記する。


◆練習問題７－３
★サンプルデータ
-- 個体識別テーブル
CREATE TABLE 個体識別 (  個体識別番号 CHAR(4), 出生日 DATE, 雌雄コード CHAR(1), 母牛番号 CHAR(4), 品種コード CHAR(2), 飼育県 VARCHAR(10)  );

SHOW COLUMNS FROM 個体識別;
+--------------------+-------------+------+-----+---------+-------+
| Field              | Type        | Null | Key | Default | Extra |
+--------------------+-------------+------+-----+---------+-------+
| 個体識別番号       | char(4)     | YES  |     | NULL    |       |
| 出生日             | date        | YES  |     | NULL    |       |
| 雌雄コード         | char(1)     | YES  |     | NULL    |       |
| 母牛番号           | char(4)     | YES  |     | NULL    |       |
| 品種コード         | char(2)     | YES  |     | NULL    |       |
| 飼育県             | varchar(10) | YES  |     | NULL    |       |
+--------------------+-------------+------+-----+---------+-------+

INSERT INTO 個体識別 ( 個体識別番号,出生日,雌雄コード,母牛番号,品種コード,飼育県 ) VALUES ( 1211,'2015-04-01',2,1814,'01','千葉県' );
INSERT INTO 個体識別 ( 個体識別番号,出生日,雌雄コード,母牛番号,品種コード,飼育県 ) VALUES ( 4530,'2016-05-15',2,2072,'02','群馬県' );
INSERT INTO 個体識別 ( 個体識別番号,出生日,雌雄コード,母牛番号,品種コード,飼育県 ) VALUES ( 2237,'2017-06-30',1,3056,'03','千葉県' );
INSERT INTO 個体識別 ( 個体識別番号,出生日,雌雄コード,母牛番号,品種コード,飼育県 ) VALUES ( 8105,'2017-11-29',1,1211,'02','北海道' );
INSERT INTO 個体識別 ( 個体識別番号,出生日,雌雄コード,母牛番号,品種コード,飼育県 ) VALUES ( 1097,'2018-01-04',2,1211,'01','北海道' );
INSERT INTO 個体識別 ( 個体識別番号,出生日,雌雄コード,母牛番号,品種コード,飼育県 ) VALUES ( 6417,'2018-01-15',2,4530,'01','岩手県' );
INSERT INTO 個体識別 ( 個体識別番号,出生日,雌雄コード,母牛番号,品種コード,飼育県 ) VALUES ( 5014,'2018-01-16',1,7710,'02','北海道' );
INSERT INTO 個体識別 ( 個体識別番号,出生日,雌雄コード,母牛番号,品種コード,飼育県 ) VALUES ( 5513,'2018-01-17',2,7104,'01','北海道' );
INSERT INTO 個体識別 ( 個体識別番号,出生日,雌雄コード,母牛番号,品種コード,飼育県 ) VALUES ( 1164,'2018-01-18',1,7340,'02','千葉県' );
INSERT INTO 個体識別 ( 個体識別番号,出生日,雌雄コード,母牛番号,品種コード,飼育県 ) VALUES ( 1097,'2018-01-19',1,7465,'02','群馬県' );

SELECT * FROM 個体識別;
+--------------------+------------+-----------------+--------------+-----------------+-----------+
| 個体識別番号       | 出生日     | 雌雄コード      | 母牛番号     | 品種コード      | 飼育県    |
+--------------------+------------+-----------------+--------------+-----------------+-----------+
| 1211               | 2015-04-01 | 2               | 1814         | 01              | 千葉県    |
| 4530               | 2016-05-15 | 2               | 2072         | 02              | 群馬県    |
| 2237               | 2017-06-30 | 1               | 3056         | 03              | 千葉県    |
| 8105               | 2017-11-29 | 1               | 1211         | 02              | 北海道    |
| 1097               | 2018-01-04 | 2               | 1211         | 01              | 北海道    |
| 6417               | 2018-01-15 | 2               | 4530         | 01              | 岩手県    |
| 5014               | 2018-01-16 | 1               | 7710         | 02              | 北海道    |
| 5513               | 2018-01-17 | 2               | 7104         | 01              | 北海道    |
| 1164               | 2018-01-18 | 1               | 7340         | 02              | 千葉県    |
| 1097               | 2018-01-19 | 1               | 7465         | 02              | 群馬県    |
+--------------------+------------+-----------------+--------------+-----------------+-----------+

-- 頭数集計テーブル
CREATE TABLE 頭数集計 (  飼育県 VARCHAR(10), 頭数 INTEGER  );

SHOW COLUMNS FROM 頭数集計;
+-----------+-------------+------+-----+---------+-------+
| Field     | Type        | Null | Key | Default | Extra |
+-----------+-------------+------+-----+---------+-------+
| 飼育県    | varchar(10) | YES  |     | NULL    |       |
| 頭数      | int         | YES  |     | NULL    |       |
+-----------+-------------+------+-----+---------+-------+


◆練習問題７－３
(1)飼育県別に飼育頭数をカウントした結果を頭数集計テーブルに登録
《解説》
＊[SELECT FROM 個体識別] で集計した結果を [INSERT INTO 頭数集計]する。

＊まずは SELECT文から
SELECT 飼育県, COUNT(飼育県) AS 頭数
FROM 個体識別
GROUP BY 飼育県
+-----------+--------+
| 飼育県    | 頭数   |
+-----------+--------+
| 千葉県    |      3 |
| 群馬県    |      2 |
| 北海道    |      4 |
| 岩手県    |      1 |
+-----------+--------+

＊INSERT文
INSERT INTO 頭数集計(飼育県, 頭数)
VALUES ～
;

＊VALUES ～の代わりに SELECT文を置く
INSERT INTO 頭数集計(飼育県, 頭数)
SELECT 飼育県, COUNT(飼育県) AS 頭数
FROM 個体識別
GROUP BY 飼育県
;
Query OK, 4 rows affected (0.01 sec)
Records: 4  Duplicates: 0  Warnings: 0

SELECT * FROM 頭数集計;
+-----------+--------+
| 飼育県    | 頭数   |
+-----------+--------+
| 千葉県    |      3 |
| 群馬県    |      2 |
| 北海道    |      4 |
| 岩手県    |      1 |
+-----------+--------+


(2)頭数集計_tbの飼育頭数の多いほうから３つ、個体識別_tbの情報を取得。
都道府県名, 個体識別番号, 雌雄。雌雄コードは「雄」「雌」とす。

《解説》
＊「頭数集計_tbの飼育頭数の多いほうから３つ」=> SELECT, ORDER BY
(SELECT 飼育県, 頭数
FROM 頭数集計
ORDER BY 頭数 DESC
LIMIT 3)
+-----------+--------+
| 飼育県    | 頭数   |
+-----------+--------+
| 北海道    |      4 |
| 千葉県    |      3 |
| 群馬県    |      2 |
+-----------+--------+

＊雌雄コードの置き換え => CASE句
SELECT DISTINCT 雌雄コード,
  CASE 雌雄コード WHEN '1' THEN '雄'
                  WHEN '2' THEN '雌'
  END AS 雌雄
FROM 個体識別
;
+-----------------+--------+
| 雌雄コード      | 雌雄   |
+-----------------+--------+
| 2               | 雌     |
| 1               | 雄     |
+-----------------+--------+

＊「個体識別_tbの情報を取得。都道府県名, 個体識別番号, 雌雄。」
《テキスト解答》サブクエリ内に LIMITを記述すると
MySQLではサポートしていないという下記のエラー

SELECT 飼育県 AS 都道府県名, 個体識別番号, 雌雄コード
FROM 個体識別
WHERE 飼育県 IN (SELECT 飼育県
                 FROM 頭数集計
                 ORDER BY 頭数 DESC
                 LIMIT 3)
;
ERROR 1235 (42000):
This version of MySQL doesn't yet support
 'LIMIT & IN/ALL/ANY/SOME subquery'


＊IN演算子の中にLIMITが使えないため副問い合わせにする
    直接 IN, ANYなどの()に LIMITを記述しなければいいので、
    FROM句内を更にサブクエリにして、そこに LIMITを記述。
SELECT *
FROM 個体識別
WHERE 飼育県 IN(
    SELECT SUB.飼育県 FROM (
        SELECT 飼育県
        FROM 頭数集計
        ORDER BY 頭数 DESC
        LIMIT 3
    ) AS SUB
)
;
+--------------------+------------+-----------------+--------------+-----------------+-----------+
| 個体識別番号       | 出生日     | 雌雄コード      | 母牛番号     | 品種コード      | 飼育県    |
+--------------------+------------+-----------------+--------------+-----------------+-----------+
| 1211               | 2015-04-01 | 2               | 1814         | 01              | 千葉県    |
| 4530               | 2016-05-15 | 2               | 2072         | 02              | 群馬県    |
| 2237               | 2017-06-30 | 1               | 3056         | 03              | 千葉県    |
| 8105               | 2017-11-29 | 1               | 1211         | 02              | 北海道    |
| 1097               | 2018-01-04 | 2               | 1211         | 01              | 北海道    |
| 5014               | 2018-01-16 | 1               | 7710         | 02              | 北海道    |
| 5513               | 2018-01-17 | 2               | 7104         | 01              | 北海道    |
| 1164               | 2018-01-18 | 1               | 7340         | 02              | 千葉県    |
| 1097               | 2018-01-19 | 1               | 7465         | 02              | 群馬県    |
+--------------------+------------+-----------------+--------------+-----------------+-----------+


《解答》
SELECT 飼育県 AS 都道府県名,個体識別番号,
CASE 雌雄コード
    WHEN '1' THEN '雄'
    WHEN '2' THEN '雌'
END AS 雌雄
FROM 個体識別
WHERE 飼育県 IN(
    SELECT SUB.飼育県 FROM (
        SELECT 飼育県
        FROM 頭数集計
        ORDER BY 頭数 DESC
        LIMIT 3
    ) AS SUB
)
;
+-----------------+--------------------+--------+
| 都道府県名      | 個体識別番号       | 雌雄   |
+-----------------+--------------------+--------+
| 千葉県          | 1211               | 雌     |
| 群馬県          | 4530               | 雌     |
| 千葉県          | 2237               | 雄     |
| 北海道          | 8105               | 雄     |
| 北海道          | 1097               | 雌     |
| 北海道          | 5014               | 雄     |
| 北海道          | 5513               | 雌     |
| 千葉県          | 1164               | 雄     |
| 群馬県          | 1097               | 雄     |
+-----------------+--------------------+--------+


(3)母牛が乳用種である牛の一覧。個体識別番号, 品種, 出生日, 母牛番号。
品種はコードではなく、「乳用種」「肉用種」「交雑種」とす。
《解説》
＊まず乳用種である牛だけを抽出
SELECT 個体識別番号, 品種コード
FROM 個体識別
WHERE 品種コード = '01'
;
+--------------------+-----------------+
| 個体識別番号       | 品種コード      |
+--------------------+-----------------+
| 1211               | 01              |
| 1097               | 01              |
| 6417               | 01              |
| 5513               | 01              |
+--------------------+-----------------+


＊「母牛が乳用種である牛」=>
SELECT * FROM 個体識別
WHERE 母牛番号 IN (SELECT 個体識別番号
                   FROM 個体識別
                   WHERE 品種コード = '01')
;
+--------------------+------------+-----------------+--------------+-----------------+-----------+
| 個体識別番号       | 出生日     | 雌雄コード      | 母牛番号     | 品種コード      | 飼育県    |
+--------------------+------------+-----------------+--------------+-----------------+-----------+
| 8105               | 2017-11-29 | 1               | 1211         | 02              | 北海道    |
| 1097               | 2018-01-04 | 2               | 1211         | 01              | 北海道    |
+--------------------+------------+-----------------+--------------+-----------------+-----------+


＊品種コードの置き換え => CASE句
SELECT DISTINCT 品種コード,
    CASE 品種コード WHEN '01' THEN '乳用種'
                    WHEN '02' THEN '肉用種'
                    WHEN 'O3' THEN '交雑種'
    END AS 品種
FROM 個体識別
;
+-----------------+-----------+
| 品種コード      | 品種      |
+-----------------+-----------+
| 01              | 乳用種    |
| 02              | 肉用種    |
| 03              | NULL      |
+-----------------+-----------+
-- NULLはデータ内に'03'が存在しないため


《解答》各部品が揃ったところで合体

SELECT 個体識別番号,
    CASE 品種コード WHEN '01' THEN '乳用種'
                    WHEN '02' THEN '肉用種'
                    WHEN 'O3' THEN '交雑種'
    END AS 品種,
    出生日, 母牛番号
FROM 個体識別
WHERE 母牛番号 IN (SELECT 個体識別番号
                   FROM 個体識別
                   WHERE 品種コード = '01'
                   )
;
+--------------------+-----------+------------+--------------+
| 個体識別番号       | 品種      | 出生日     | 母牛番号     |
+--------------------+-----------+------------+--------------+
| 8105               | 肉用種    | 2017-11-29 | 1211         |
| 1097               | 乳用種    | 2018-01-04 | 1211         |
+--------------------+-----------+------------+--------------+


