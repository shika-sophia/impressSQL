■８章 複数テーブルの結合 / join / p267

◆練習問題８－１
★サンプルデータ
/*Aテーブル*/
CREATE TABLE A (  A1 INTEGER, A2 INTEGER  );

INSERT INTO A ( A1,A2 ) VALUES ( 1,3 );
INSERT INTO A ( A1,A2 ) VALUES ( 2,4 );

+------+------+
| A1   | A2   |
+------+------+
|    1 |    3 |
|    2 |    4 |
+------+------+

/*Bテーブル*/
CREATE TABLE B (  B1 INTEGER, B2 INTEGER  );

INSERT INTO B ( B1,B2 ) VALUES ( 1,2 );
INSERT INTO B ( B1,B2 ) VALUES ( 3,NULL );
+------+------+
| B1   | B2   |
+------+------+
|    1 |    2 |
|    3 | NULL |
+------+------+

◆練習問題８－１
SQL文が問題文に書かれているので、問題というより、出してみるサンプル。
１行で書かずに改行を入れて意味を分かりやすく書こう。
(1)
SELECT A1, A2, B1, B2
FROM A
JOIN B
ON A.A1 = B.B1
;
+------+------+------+------+
| A1   | A2   | B1   | B2   |
+------+------+------+------+
|    1 |    3 |    1 |    2 |
+------+------+------+------+

(2)
SELECT A1, A2, B2
FROM B
JOIN A
ON B.B2 = A.A1
;
+------+------+------+
| A1   | A2   | B2   |
+------+------+------+
|    2 |    4 |    2 |
+------+------+------+

(3)
SELECT A1, A2, B1, B2
FROM B
LEFT JOIN A
ON B.B2 = A.A1
;
+------+------+------+------+
| A1   | A2   | B1   | B2   |
+------+------+------+------+
|    2 |    4 |    1 |    2 |
| NULL | NULL |    3 | NULL |
+------+------+------+------+

(4)
SELECT A.A1, C.A2, B1, B2
FROM A
JOIN B
ON A.A1 = B.B1
JOIN A AS C
ON B.B1 = C.A1
;
+------+------+------+------+
| A1   | A2   | B1   | B2   |
+------+------+------+------+
|    1 |    3 |    1 |    2 |
+------+------+------+------+


◆練習問題８－２
★サンプルデータ
/*社員*/
CREATE TABLE 社員 (  社員番号 CHAR(8), 名前 VARCHAR(40), 生年月日 DATE, 部署ID INTEGER, 上司ID CHAR(8), 勤務地ID INTEGER  );
+--------------+-------------+------+-----+---------+-------+
| Field        | Type        | Null | Key | Default | Extra |
+--------------+-------------+------+-----+---------+-------+
| 社員番号     | char(8)     | YES  |     | NULL    |       |
| 名前         | varchar(40) | YES  |     | NULL    |       |
| 生年月日     | date        | YES  |     | NULL    |       |
| 部署ID       | int         | YES  |     | NULL    |       |
| 上司ID       | char(8)     | YES  |     | NULL    |       |
| 勤務地ID     | int         | YES  |     | NULL    |       |
+--------------+-------------+------+-----+---------+-------+

INSERT INTO 社員 ( 社員番号,名前,生年月日,部署ID,上司ID,勤務地ID ) VALUES ( '21000021','菅原拓真','1978-09-01',5,'12459040',12 );
INSERT INTO 社員 ( 社員番号,名前,生年月日,部署ID,上司ID,勤務地ID ) VALUES ( '12459040','宇多田定一','1955-01-01',5,NULL,12 );
INSERT INTO 社員 ( 社員番号,名前,生年月日,部署ID,上司ID,勤務地ID ) VALUES ( '61381041','大江岳人','1978-09-23',5,'31005782',12 );
INSERT INTO 社員 ( 社員番号,名前,生年月日,部署ID,上司ID,勤務地ID ) VALUES ( '31005782','綾小路紘子','1965-02-05',5,NULL,24 );
+--------------+-----------------+--------------+----------+----------+-------------+
| 社員番号     | 名前            | 生年月日     | 部署ID   | 上司ID   | 勤務地ID    |
+--------------+-----------------+--------------+----------+----------+-------------+
| 21000021     | 菅原拓真        | 1978-09-01   |        5 | 12459040 |          12 |
| 12459040     | 宇多田定一      | 1955-01-01   |        5 | NULL     |          12 |
| 61381041     | 大江岳人        | 1978-09-23   |        5 | 31005782 |          12 |
| 31005782     | 綾小路紘子      | 1965-02-05   |        5 | NULL     |          24 |
+--------------+-----------------+--------------+----------+----------+-------------+

/*部署*/
CREATE TABLE 部署 (  部署ID INTEGER, 名前 VARCHAR(40), 本部拠点ID INTEGER  );
+----------------+-------------+------+-----+---------+-------+
| Field          | Type        | Null | Key | Default | Extra |
+----------------+-------------+------+-----+---------+-------+
| 部署ID         | int         | YES  |     | NULL    |       |
| 名前           | varchar(40) | YES  |     | NULL    |       |
| 本部拠点ID     | int         | YES  |     | NULL    |       |
+----------------+-------------+------+-----+---------+-------+

INSERT INTO 部署 ( 部署ID,名前,本部拠点ID ) VALUES ( 1,'経営企画部',12 );
INSERT INTO 部署 ( 部署ID,名前,本部拠点ID ) VALUES ( 2,'法務部',12 );
INSERT INTO 部署 ( 部署ID,名前,本部拠点ID ) VALUES ( 3,'経理部',12 );
INSERT INTO 部署 ( 部署ID,名前,本部拠点ID ) VALUES ( 4,'総務部',12 );
INSERT INTO 部署 ( 部署ID,名前,本部拠点ID ) VALUES ( 5,'開発部',12 );
+----------+-----------------+----------------+
| 部署ID   | 名前            | 本部拠点ID     |
+----------+-----------------+----------------+
|        1 | 経営企画部      |             12 |
|        2 | 法務部          |             12 |
|        3 | 経理部          |             12 |
|        4 | 総務部          |             12 |
|        5 | 開発部          |             12 |
+----------+-----------------+----------------+

/*支店*/
CREATE TABLE 支店 (  支店ID INTEGER, 名前 VARCHAR(40), 支店長ID CHAR(8)  );
+-------------+-------------+------+-----+---------+-------+
| Field       | Type        | Null | Key | Default | Extra |
+-------------+-------------+------+-----+---------+-------+
| 支店ID      | int         | YES  |     | NULL    |       |
| 名前        | varchar(40) | YES  |     | NULL    |       |
| 支店長ID    | char(8)     | YES  |     | NULL    |       |
+-------------+-------------+------+-----+---------+-------+

INSERT INTO 支店 ( 支店ID,名前,支店長ID ) VALUES ( 12,'東京','12459040' );
INSERT INTO 支店 ( 支店ID,名前,支店長ID ) VALUES ( 24,'京都','31005782' );
+----------+--------+-------------+
| 支店ID   | 名前   | 支店長ID    |
+----------+--------+-------------+
|       12 | 東京   | 12459040    |
|       24 | 京都   | 31005782    |
+----------+--------+-------------+

◆練習問題８－２
(1)社員番号, 名前, 部署名の一覧
《解説》
・「名前」という列名は各テーブルに複数存在するので
    「テーブル名.名前」と記述する。
・ON句は どの行とどの行を繋げるかを指示。
     ここでは、２テーブルにまたがりデータとして一致する「部署ID」で繋ぐ。

SELECT 社員番号, 社員.名前 AS 名前, 部署.名前 AS 部署名
FROM 社員
JOIN 部署
ON 社員.部署ID = 部署.部署ID
;
+--------------+-----------------+-----------+
| 社員番号     | 名前            | 部署名    |
+--------------+-----------------+-----------+
| 21000021     | 菅原拓真        | 開発部    |
| 12459040     | 宇多田定一      | 開発部    |
| 61381041     | 大江岳人        | 開発部    |
| 31005782     | 綾小路紘子      | 開発部    |
+--------------+-----------------+-----------+


(2)社員番号, 名前, 上司名
《解説》
・社員_tbどうしの自己結合(self join)
・FROM句とJOIN句のテーブル名に[AS]で別名を付けて区別する。
・列名はどちらのテーブルのものか区別するため「テーブル名.列名」
・[JOIN]だけだと「上司IDが NULL」の行が消滅するので、
    左表をすべて表示するため [LEFT JOIN]にする。
・ついでに [NULL]を COALESCE()で「なし」に変更
+--------------+--------------+-----------------+
| 社員番号     | 名前         | 上司名          |
+--------------+--------------+-----------------+
| 21000021     | 菅原拓真     | 宇多田定一      |
| 61381041     | 大江岳人     | 綾小路紘子      |
+--------------+--------------+-----------------+

・ついでに [NULL]を COALESCE()で「なし」に変更

《解答》
SELECT A.社員番号,
       A.名前 AS 名前,
       COALESCE(B.名前, 'なし') AS 上司名
FROM 社員 AS A
LEFT JOIN 社員 AS B
ON A.上司ID = B.社員番号
;
+--------------+-----------------+-----------------+
| 社員番号     | 名前            | 上司名          |
+--------------+-----------------+-----------------+
| 21000021     | 菅原拓真        | 宇多田定一      |
| 12459040     | 宇多田定一      | なし            |
| 61381041     | 大江岳人        | 綾小路紘子      |
| 31005782     | 綾小路紘子      | なし            |
+--------------+-----------------+-----------------+


(3)社員番号, 名前, 部署名, 勤務地
《解説》
＊３テーブルの結合。まずは社員_tb
SELECT 社員番号, 名前
FROM 社員
;
+--------------+-----------------+
| 社員番号     | 名前            |
+--------------+-----------------+
| 21000021     | 菅原拓真        |
| 12459040     | 宇多田定一      |
| 61381041     | 大江岳人        |
| 31005782     | 綾小路紘子      |
+--------------+-----------------+

＊これに部署名を付けるのは(1)で既出。
SELECT 社員番号, 社員.名前 AS 名前, 部署.名前 AS 部署名
FROM 社員
JOIN 部署
ON 社員.部署ID = 部署.部署ID
;
+--------------+-----------------+-----------+
| 社員番号     | 名前            | 部署名    |
+--------------+-----------------+-----------+
| 21000021     | 菅原拓真        | 開発部    |
| 12459040     | 宇多田定一      | 開発部    |
| 61381041     | 大江岳人        | 開発部    |
| 31005782     | 綾小路紘子      | 開発部    |
+--------------+-----------------+-----------+

＊更に勤務地を追加
SELECT 支店ID, 名前
FROM 支店
;
+----------+--------+
| 支店ID   | 名前   |
+----------+--------+
|       12 | 東京   |
|       24 | 京都   |
+----------+--------+

＊社員_tbの勤務地IDは外部キーで、支店_tbの支店IDと一致する。
=> [ ON 社員.勤務地ID = 支店.支店ID ]


《解答》
SELECT 社員番号,
       社員.名前 AS 名前,
       部署.名前 AS 部署名,
       支店.名前 AS 勤務地
FROM 社員
JOIN 部署
ON 社員.部署ID = 部署.部署ID
JOIN 支店
ON 社員.勤務地ID = 支店.支店ID
;
+--------------+-----------------+-----------+-----------+
| 社員番号     | 名前            | 部署名    | 勤務地    |
+--------------+-----------------+-----------+-----------+
| 21000021     | 菅原拓真        | 開発部    | 東京      |
| 12459040     | 宇多田定一      | 開発部    | 東京      |
| 61381041     | 大江岳人        | 開発部    | 東京      |
| 31005782     | 綾小路紘子      | 開発部    | 京都      |
+--------------+-----------------+-----------+-----------+


(4)支店コード, 支店名, 支店長名, 社員数
《解説》
＊支店コード, 支店名 => 支店_tb
＊支店長名 => 支店.支店長ID = 社員.社員番号 でJOINして 社員.名前
＊支店ごとの社員数
  => GROUP BY 社員.勤務地ID してから COUNT(社員番号)で集計しないと出てこないデータ
  => この部分だけ先にSELECT。
  => サブクエリ。JOIN(SELECT ～) AS SUB =>JOIN句に[AS]で別名を付ける
  => ON句は SUBという新たなテーブルと結合するイメージ。
  => SUB内のSELECTでテーブルになるよう検索。結合に使う外部キーも忘れずに


＊支店コード, 支店名 => 支店_tb
SELECT 支店ID AS 支店コード, 名前 AS 支店名
FROM 支店
;
+-----------------+-----------+
| 支店コード      | 支店名    |
+-----------------+-----------+
|              12 | 東京      |
|              24 | 京都      |
+-----------------+-----------+

＊支店長名 => 支店.支店長ID = 社員.社員番号 でJOINして 社員.名前
SELECT 支店ID AS 支店コード,
       支店.名前 AS 支店名,
       社員.名前 AS 支店長名
FROM 支店
JOIN 社員
ON 支店.支店長ID = 社員.社員番号
;
+-----------------+-----------+-----------------+
| 支店コード      | 支店名    | 支店長名        |
+-----------------+-----------+-----------------+
|              12 | 東京      | 宇多田定一      |
|              24 | 京都      | 綾小路紘子      |
+-----------------+-----------+-----------------+


＊支店ごとの社員数
  => GROUP BY 社員.勤務地ID してから COUNT(社員番号)で集計しないと出てこないデータ
  => この部分だけ先にSELECT。
  => サブクエリ。JOIN(SELECT ～) AS SUB =>JOIN句に[AS]で別名を付ける。
  => ON句は SUBという新たなテーブルと結合するイメージ。
  => SUB内のSELECTでテーブルになるよう検索。結合に使う外部キーも忘れずに

SELECT 勤務地ID, COUNT(社員番号) AS 社員数
FROM 社員
GROUP BY 勤務地ID
;
+-------------+-----------+
| 勤務地ID    | 社員数    |
+-------------+-----------+
|          12 |         3 |
|          24 |         1 |
+-------------+-----------+

SELECT 支店ID AS 支店コード,
       支店.名前 AS 支店名,
       社員.名前 AS 支店長名,
       SUB.社員数 AS 社員数
FROM 支店
JOIN 社員
ON 支店.支店長ID = 社員.社員番号
JOIN (SELECT 勤務地ID, COUNT(社員番号) AS 社員数
      FROM 社員
      GROUP BY 勤務地ID
      ) AS SUB
ON 支店.支店ID = SUB.勤務地ID
;
+-----------------+-----------+-----------------+-----------+
| 支店コード      | 支店名    | 支店長名        | 社員数    |
+-----------------+-----------+-----------------+-----------+
|              12 | 東京      | 宇多田定一      |         3 |
|              24 | 京都      | 綾小路紘子      |         1 |
+-----------------+-----------+-----------------+-----------+


(5)社員番号, 名前, 本人勤務地, 上司勤務地
＊社員番号, 名前 => 社員_tb
＊本人勤務地 => ON 社員.勤務地ID = 支店.支店ID => 支店.名前
＊上司勤務地 => (後述)


＊社員番号, 名前 => 社員_tb
SELECT 社員番号, 名前
FROM 社員
;
+--------------+-----------------+
| 社員番号     | 名前            |
+--------------+-----------------+
| 21000021     | 菅原拓真        |
| 12459040     | 宇多田定一      |
| 61381041     | 大江岳人        |
| 31005782     | 綾小路紘子      |
+--------------+-----------------+


＊本人勤務地 => ON 社員.勤務地ID = 支店.支店ID => 支店.名前
SELECT 社員番号,
       社員.名前 AS 名前,
       支店.名前 AS 本人勤務地
FROM 社員
JOIN 支店
ON 社員.勤務地ID = 支店.支店ID
;
+--------------+-----------------+-----------------+
| 社員番号     | 名前            | 本人勤務地      |
+--------------+-----------------+-----------------+
| 21000021     | 菅原拓真        | 東京            |
| 12459040     | 宇多田定一      | 東京            |
| 61381041     | 大江岳人        | 東京            |
| 31005782     | 綾小路紘子      | 京都            |
+--------------+-----------------+-----------------+


＊上司勤務地 => まず本人の上司ID から 上司を特定 (NULLは'なし'に変換)

SELECT 社員.名前 AS 名前,
       COALESCE(上司ID, 'なし') AS 上司ID
FROM 社員
;
+-----------------+----------+
| 名前            | 上司ID   |
+-----------------+----------+
| 菅原拓真        | 12459040 |
| 宇多田定一      | なし     |
| 大江岳人        | 31005782 |
| 綾小路紘子      | なし     |
+-----------------+----------+


＊社員Aに 社員Bを結合
  =>本人に上司のデータを結合

SELECT A.社員番号 AS 社員番号,
       A.名前 AS 名前,
       B.名前 AS 上司名,
       B.勤務地ID AS 上司勤務地ID
FROM 社員 A
JOIN 社員 B
ON B.社員番号=A.上司ID
;
+--------------+--------------+-----------------+-------------------+
| 社員番号     | 名前         | 上司名          | 上司勤務地ID      |
+--------------+--------------+-----------------+-------------------+
| 21000021     | 菅原拓真     | 宇多田定一      |                12 |
| 61381041     | 大江岳人     | 綾小路紘子      |                24 |
+--------------+--------------+-----------------+-------------------+


＊上司勤務地ID に 支店_tbをJOINして、支店名を表示。

SELECT A.社員番号 AS 社員番号,
       A.名前 AS 名前,
       B.名前 AS 上司名,
       B.勤務地ID AS 上司勤務地ID,
       支店.名前 AS 上司
FROM 社員 A
JOIN 社員 B
ON B.社員番号=A.上司ID
JOIN 支店
ON B.勤務地ID = 支店.支店ID
;
+--------------+--------------+-----------------+-------------------+--------+
| 社員番号     | 名前         | 上司名          | 上司勤務地ID      | 上司   |
+--------------+--------------+-----------------+-------------------+--------+
| 21000021     | 菅原拓真     | 宇多田定一      |                12 | 東京   |
| 61381041     | 大江岳人     | 綾小路紘子      |                24 | 京都   |
+--------------+--------------+-----------------+-------------------+--------+

＊本人勤務地と上司勤務地を並記
  =>本人の支店と、上司の支店は違う勤務地ID =>「テーブル名 AS 別名」で区別

SELECT A.社員番号 AS 社員番号,
       A.名前 AS 名前,
       C.名前 AS 本人勤務地,
       D.名前 AS 上司勤務地
/*本人*/
FROM 社員 A
JOIN 支店 AS C
ON A.勤務地ID = C.支店ID
/*上司*/
JOIN 社員 B
ON B.社員番号=A.上司ID
JOIN 支店 AS D
ON B.勤務地ID = D.支店ID
;
+--------------+--------------+-----------------+-----------------+
| 社員番号     | 名前         | 本人勤務地      | 上司勤務地      |
+--------------+--------------+-----------------+-----------------+
| 21000021     | 菅原拓真     | 東京            | 東京            |
| 61381041     | 大江岳人     | 東京            | 京都            |
+--------------+--------------+-----------------+-----------------+

＊本人と上司が違う勤務地のひとに絞り込み
  => 結合条件 [ON]に WHERE句のような条件を追加 => ANDで結ぶ
《解答》
SELECT A.社員番号 AS 社員番号,
       A.名前 AS 名前,
       C.名前 AS 本人勤務地,
       D.名前 AS 上司勤務地
/*本人*/
FROM 社員 A
JOIN 支店 AS C
ON A.勤務地ID = C.支店ID
/*上司*/
JOIN 社員 B
ON B.社員番号=A.上司ID
   AND A.勤務地ID <> B.勤務地ID
JOIN 支店 AS D
ON B.勤務地ID = D.支店ID
;
+--------------+--------------+-----------------+-----------------+
| 社員番号     | 名前         | 本人勤務地      | 上司勤務地      |
+--------------+--------------+-----------------+-----------------+
| 61381041     | 大江岳人     | 東京            | 京都            |
+--------------+--------------+-----------------+-----------------+


