◆練習問題６－１
★サンプルデータ
-- 都市別気象観測テーブル
CREATE TABLE 都市別気象観測 (  都市名 VARCHAR(20), 月 INTEGER, 降水量 INTEGER, 最高気温 INTEGER, 最低気温 INTEGER  );
+--------------+-------------+------+-----+---------+-------+
| Field        | Type        | Null | Key | Default | Extra |
+--------------+-------------+------+-----+---------+-------+
| 都市名       | varchar(20) | YES  |     | NULL    |       |
| 月           | int         | YES  |     | NULL    |       |
| 降水量       | int         | YES  |     | NULL    |       |
| 最高気温     | int         | YES  |     | NULL    |       |
| 最低気温     | int         | YES  |     | NULL    |       |
+--------------+-------------+------+-----+---------+-------+


INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '熊谷',1,31,12,-6 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '熊谷',2,37,15,-5 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '熊谷',3,80,20,-1 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '熊谷',4,92,28,0 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '熊谷',5,230,29,9 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '熊谷',6,168,32,14 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '熊谷',7,96,38,16 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '熊谷',8,24,37,21 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '熊谷',9,179,35,15 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '熊谷',10,68,32,6 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '熊谷',11,53,22,0 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '熊谷',12,45,17,-4 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '奈良',1,40,11,-4 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '奈良',2,109,12,-5 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '奈良',3,180,22,-2 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '奈良',4,87,29,-1 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '奈良',5,37,30,4 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '奈良',6,257,31,14 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '奈良',7,156,36,17 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '奈良',8,170,36,19 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '奈良',9,289,33,15 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '奈良',10,93,27,6 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '奈良',11,90,20,0 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '奈良',12,54,15,-2 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '博多',1,23,14,-2 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '博多',2,139,15,-3 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '博多',3,122,22,-1 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '博多',4,62,26,4 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '博多',5,38,28,11 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '博多',6,291,32,16 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '博多',7,458,35,18 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '博多',8,183,36,21 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '博多',9,102,31,14 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '博多',10,40,27,9 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '博多',11,101,21,2 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '博多',12,88,19,1 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '東京',1,40,11,-4 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '東京',2,109,12,-5 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '東京',3,180,22,-2 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '東京',4,87,29,-1 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '東京',5,37,30,4 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '東京',6,257,31,14 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '東京',7,156,36,17 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '東京',8,170,36,19 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '東京',9,289,33,15 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '東京',10,93,27,6 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '東京',11,90,20,0 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '東京',12,54,15,-2 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '大阪',1,23,14,-2 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '大阪',2,139,15,-3 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '大阪',3,122,22,-1 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '大阪',4,62,26,4 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '大阪',5,38,28,11 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '大阪',6,291,32,16 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '大阪',7,458,35,18 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '大阪',8,183,36,21 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '大阪',9,102,31,14 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '大阪',10,40,27,9 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '大阪',11,101,21,2 );
INSERT INTO 都市別気象観測 ( 都市名,月,降水量,最高気温,最低気温 ) VALUES ( '大阪',12,88,19,1 );

SELECT * FROM 都市別気象観測;
+-----------+------+-----------+--------------+--------------+
| 都市名    | 月   | 降水量    | 最高気温     | 最低気温     |
+-----------+------+-----------+--------------+--------------+
| 熊谷      |    1 |        31 |           12 |           -6 |
| 熊谷      |    2 |        37 |           15 |           -5 |
| 熊谷      |    3 |        80 |           20 |           -1 |
| 熊谷      |    4 |        92 |           28 |            0 |
| 熊谷      |    5 |       230 |           29 |            9 |
| 熊谷      |    6 |       168 |           32 |           14 |
| 熊谷      |    7 |        96 |           38 |           16 |
| 熊谷      |    8 |        24 |           37 |           21 |
| 熊谷      |    9 |       179 |           35 |           15 |
| 熊谷      |   10 |        68 |           32 |            6 |
| 熊谷      |   11 |        53 |           22 |            0 |
| 熊谷      |   12 |        45 |           17 |           -4 |
| 奈良      |    1 |        40 |           11 |           -4 |
| 奈良      |    2 |       109 |           12 |           -5 |
| 奈良      |    3 |       180 |           22 |           -2 |
| 奈良      |    4 |        87 |           29 |           -1 |
| 奈良      |    5 |        37 |           30 |            4 |
| 奈良      |    6 |       257 |           31 |           14 |
| 奈良      |    7 |       156 |           36 |           17 |
| 奈良      |    8 |       170 |           36 |           19 |
| 奈良      |    9 |       289 |           33 |           15 |
| 奈良      |   10 |        93 |           27 |            6 |
| 奈良      |   11 |        90 |           20 |            0 |
| 奈良      |   12 |        54 |           15 |           -2 |
| 博多      |    1 |        23 |           14 |           -2 |
| 博多      |    2 |       139 |           15 |           -3 |
| 博多      |    3 |       122 |           22 |           -1 |
| 博多      |    4 |        62 |           26 |            4 |
| 博多      |    5 |        38 |           28 |           11 |
| 博多      |    6 |       291 |           32 |           16 |
| 博多      |    7 |       458 |           35 |           18 |
| 博多      |    8 |       183 |           36 |           21 |
| 博多      |    9 |       102 |           31 |           14 |
| 博多      |   10 |        40 |           27 |            9 |
| 博多      |   11 |       101 |           21 |            2 |
| 博多      |   12 |        88 |           19 |            1 |
| 東京      |    1 |        40 |           11 |           -4 |
| 東京      |    2 |       109 |           12 |           -5 |
| 東京      |    3 |       180 |           22 |           -2 |
| 東京      |    4 |        87 |           29 |           -1 |
| 東京      |    5 |        37 |           30 |            4 |
| 東京      |    6 |       257 |           31 |           14 |
| 東京      |    7 |       156 |           36 |           17 |
| 東京      |    8 |       170 |           36 |           19 |
| 東京      |    9 |       289 |           33 |           15 |
| 東京      |   10 |        93 |           27 |            6 |
| 東京      |   11 |        90 |           20 |            0 |
| 東京      |   12 |        54 |           15 |           -2 |
| 大阪      |    1 |        23 |           14 |           -2 |
| 大阪      |    2 |       139 |           15 |           -3 |
| 大阪      |    3 |       122 |           22 |           -1 |
| 大阪      |    4 |        62 |           26 |            4 |
| 大阪      |    5 |        38 |           28 |           11 |
| 大阪      |    6 |       291 |           32 |           16 |
| 大阪      |    7 |       458 |           35 |           18 |
| 大阪      |    8 |       183 |           36 |           21 |
| 大阪      |    9 |       102 |           31 |           14 |
| 大阪      |   10 |        40 |           27 |            9 |
| 大阪      |   11 |       101 |           21 |            2 |
| 大阪      |   12 |        88 |           19 |            1 |
+-----------+------+-----------+--------------+--------------+


◆練習問題６－１
(1)日本全体の年間降水量と、年間の最高気温・最低気温の平均
《テキストの解答》
SELECT SUM(降水量),
       AVG(最高気温),
       AVG(最低気温)
FROM 都市別気象観測
;
+----------------+-------------------+-------------------+
| SUM(降水量)    | AVG(最高気温)     | AVG(最低気温)     |
+----------------+-------------------+-------------------+
|           7521 |           25.5500 |            6.1167 |
+----------------+-------------------+-------------------+

【考察】
・ASで列名を置き替えないと、関数のまま出てくる
・ついでに小数点以下４桁も要らないので２桁にしておく

《解答改》
SELECT SUM(降水量) AS 日本の年間降水量,
       ROUND(AVG(最高気温),2) AS 最高気温の平均,
       ROUND(AVG(最低気温),2) AS 最低気温の平均
FROM 都市別気象観測
;
+--------------------------+-----------------------+-----------------------+
| 日本の年間降水量         | 最高気温の平均        | 最低気温の平均        |
+--------------------------+-----------------------+-----------------------+
|                     7521 |                 25.55 |                  6.12 |
+--------------------------+----------------------------+-----------------------+-----------------------+


(2)東京の年間降水量と最高気温・最低気温の平均
《解説》
WHERE句で集計より先に絞り込まれるので、GROUP BY句は不要。

SELECT 都市名,
       SUM(降水量) AS の東京の年間降水量,
       ROUND(AVG(最高気温),2) AS 最高気温の平均,
       ROUND(AVG(最低気温),2) AS 最低気温の平均
FROM 都市別気象観測
WHERE 都市名 = '東京'
;
+-----------+-----------------------------+-----------------------+-----------------------+
| 都市名    | の東京の年間降水量          | 最高気温の平均        | 最低気温の平均        |
+-----------+-----------------------------+-----------------------+-----------------------+
| 東京      |                        1562 |                 25.17 |                  5.08 |
+-----------+-----------------------------+-----------------------+-----------------------+


(3)各都市の降水量の平均と最も低かった最高気温、最も高かった最低気温。
《解説》各都市ごとに集計しなければいけないので、GROUP BY句でグループ化してから集計。

SELECT 都市名,
       ROUND(AVG(降水量),2) AS 降水量の平均,
       MIN(最高気温) AS 最小の最高気温,
       MAX(最低気温) AS 最大の最低気温
FROM 都市別気象観測
GROUP BY 都市名
;
+-----------+--------------------+-----------------------+-----------------------+
| 都市名    | 降水量の平均       | 最小の最高気温        | 最大の最低気温        |
+-----------+--------------------+-----------------------+-----------------------+
| 熊谷      |              91.92 |                    12 |                    21 |
| 奈良      |             130.17 |                    11 |                    19 |
| 博多      |             137.25 |                    14 |                    21 |
| 東京      |             130.17 |                    11 |                    19 |
| 大阪      |             137.25 |                    14 |                    21 |
+-----------+--------------------+-----------------------+-----------------------+


(4)月別の降水量,最高気温,最低気温の平均
《解説》月別集計をするので GRUOP BY
SELECT 月,
       ROUND(AVG(降水量),2) AS 降水量の平均,
       ROUND(AVG(最高気温),2) AS 最高気温の平均,
       ROUND(AVG(最低気温),2) AS 最低気温の平均
FROM 都市別気象観測
GROUP BY 月
;
+------+--------------------+-----------------------+-----------------------+
| 月   | 降水量の平均       | 最高気温の平 均        | 最低気温の平均        |
+------+--------------------+-----------------------+-----------------------+
|    1 |              31.40 |                 12.40 |                 -3.60 |
|    2 |             106.60 |                 13.80 |                 -4.20 |
|    3 |             136.80 |                 21.60 |                 -1.40 |
|    4 |              78.00 |                 27.60 |                  1.20 |
|    5 |              76.00 |                 29.00 |                  7.80 |
|    6 |             252.80 |                 31.60 |                 14.80 |
|    7 |             264.80 |                 36.00 |                 17.20 |
|    8 |             146.00 |                 36.20 |                 20.20 |
|    9 |             192.20 |                 32.60 |                 14.60 |
|   10 |              66.80 |                 28.00 |                  7.20 |
|   11 |              87.00 |                 20.80 |                  0.80 |
|   12 |              65.80 |                 17.00 |                 -1.20 |
+------+--------------------+-----------------------+-----------------------+


(5)１年間で最も高い最高気温が38度以上のある都市名と気温。
《解説》集計結果から更に絞りこむので HAVING句。(WHERE句ではない)

《テキストの解答》
SELECT 都市名,MAX(最高気温)
FROM 都市別気象観測
GROUP BY 都市名
HAVING MAX(最高気温) >= 38
;
+-----------+-------------------+
| 都市名    | MAX(最高気温)     |
+-----------+-------------------+
| 熊谷      |                38 |
+-----------+-------------------+

【考察】
題意からすると都市ごとの集計は必要ないのでは？ 「GROUP BY 都市名」必要？
最高の最高気温なので WHERE句でもできる気がした。やってみる。

SELECT 都市名,最高気温
FROM 都市別気象観測
WHERE 最高気温 >= 38
;
+-----------+--------------+
| 都市名    | 最高気温     |
+-----------+--------------+
| 熊谷      |           38 |
+-----------+--------------+

(6)も同様


◆練習問題６－２
★サンプルデータ
CREATE TABLE 入退室管理 (  日付 DATE, 退室 CHAR(1), 社員名 VARCHAR(20), 事由区分 CHAR(1)  );
+--------------+-------------+------+-----+---------+-------+
| Field        | Type        | Null | Key | Default | Extra |
+--------------+-------------+------+-----+---------+-------+
| 日付         | date        | YES  |     | NULL    |       |
| 退室         | char(1)     | YES  |     | NULL    |       |
| 社員名       | varchar(20) | YES  |     | NULL    |       |
| 事由区分     | char(1)     | YES  |     | NULL    |       |
+--------------+-------------+------+-----+---------+-------+

-- データ
INSERT INTO 入退室管理 ( 日付,退室,社員名,事由区分 ) VALUES ( '2018-01-31',1,'菅原',1 );
INSERT INTO 入退室管理 ( 日付,退室,社員名,事由区分 ) VALUES ( '2018-02-01',1,'菅原',1 );
INSERT INTO 入退室管理 ( 日付,退室,社員名,事由区分 ) VALUES ( '2018-02-02',1,'湊',2 );
INSERT INTO 入退室管理 ( 日付,退室,社員名,事由区分 ) VALUES ( '2018-02-05',1,'朝香',3 );
INSERT INTO 入退室管理 ( 日付,退室,社員名,事由区分 ) VALUES ( '2018-02-05',1,'菅原',3 );
INSERT INTO 入退室管理 ( 日付,退室,社員名,事由区分 ) VALUES ( '2018-02-08',1,'湊',9 );
INSERT INTO 入退室管理 ( 日付,退室,社員名,事由区分 ) VALUES ( '2018-02-09',1,'菅原',1 );
INSERT INTO 入退室管理 ( 日付,退室,社員名,事由区分 ) VALUES ( '2018-02-10',1,'菅原',1 );
INSERT INTO 入退室管理 ( 日付,退室,社員名,事由区分 ) VALUES ( '2018-02-11',1,'菅原',1 );
INSERT INTO 入退室管理 ( 日付,退室,社員名,事由区分 ) VALUES ( '2018-02-12',1,'菅原',1 );
INSERT INTO 入退室管理 ( 日付,退室,社員名,事由区分 ) VALUES ( '2018-02-13',1,'菅原',3 );
INSERT INTO 入退室管理 ( 日付,退室,社員名,事由区分 ) VALUES ( '2018-02-13',1,'湊',3 );
INSERT INTO 入退室管理 ( 日付,退室,社員名,事由区分 ) VALUES ( '2018-02-13',1,'朝香',3 );
INSERT INTO 入退室管理 ( 日付,退室,社員名,事由区分 ) VALUES ( '2018-02-14',1,'菅原',1 );
INSERT INTO 入退室管理 ( 日付,退室,社員名,事由区分 ) VALUES ( '2018-02-15',1,'菅原',1 );
INSERT INTO 入退室管理 ( 日付,退室,社員名,事由区分 ) VALUES ( '2018-02-16',1,'菅原',1 );
INSERT INTO 入退室管理 ( 日付,退室,社員名,事由区分 ) VALUES ( '2018-02-17',1,'朝香',3 );
INSERT INTO 入退室管理 ( 日付,退室,社員名,事由区分 ) VALUES ( '2018-02-18',1,'菅原',3 );
INSERT INTO 入退室管理 ( 日付,退室,社員名,事由区分 ) VALUES ( '2018-02-19',1,'湊',9 );
INSERT INTO 入退室管理 ( 日付,退室,社員名,事由区分 ) VALUES ( '2018-02-20',1,'湊',9 );

SELECT * FROM 入退室管理;
+------------+--------+-----------+--------------+
| 日付       | 退室   | 社員名    | 事由区分     |
+------------+--------+-----------+--------------+
| 2018-01-31 | 1      | 菅原      | 1            |
| 2018-02-01 | 1      | 菅原      | 1            |
| 2018-02-02 | 1      | 湊        | 2            |
| 2018-02-05 | 1      | 朝香      | 3            |
| 2018-02-05 | 1      | 菅原      | 3            |
| 2018-02-08 | 1      | 湊        | 9            |
| 2018-02-09 | 1      | 菅原      | 1            |
| 2018-02-10 | 1      | 菅原      | 1            |
| 2018-02-11 | 1      | 菅原      | 1            |
| 2018-02-12 | 1      | 菅原      | 1            |
| 2018-02-13 | 1      | 菅原      | 3            |
| 2018-02-13 | 1      | 湊        | 3            |
| 2018-02-13 | 1      | 朝香      | 3            |
| 2018-02-14 | 1      | 菅原      | 1            |
| 2018-02-15 | 1      | 菅原      | 1            |
| 2018-02-16 | 1      | 菅原      | 1            |
| 2018-02-17 | 1      | 朝香      | 3            |
| 2018-02-18 | 1      | 菅原      | 3            |
| 2018-02-19 | 1      | 湊        | 9            |
| 2018-02-20 | 1      | 湊        | 9            |
+------------+--------+-----------+--------------+


◆練習問題６－２
(1)現在入室中の社員数を取得
《解説》
・現在入室中の場合、[退室]の列が NULLになる。
(サンプルデータには存在しないので 正しいSQL文を入れても Empty Setが出る)

・COUNT()は NULLも集計できる COUNT(*)を用う。

《解答》
SELECT 退室, COUNT(*) AS 現在入室中の社員数
FROM 入退室管理
WHERE 退室 IS NULL
;
+--------+-----------------------------+
| 退室   | 現在入室中の社員数          |
+--------+-----------------------------+
| NULL   |                           0 |
+--------+-----------------------------+

【考察】
テキストの解答に加え、列選択リストに[退室]を加えたので Empty Setにならず。


(2)社員ごとの入室回数を回数の多い順に取得。
《解説》社員ごとに集計するので「GROUP BY 社員名」

SELECT 社員名, COUNT(*) AS 入室回数
FROM 入退室管理
GROUP BY 社員名
ORDER BY COUNT(*) DESC
;
+-----------+--------------+
| 社員名    | 入室回数     |
+-----------+--------------+
| 菅原      |           12 |
| 湊        |            5 |
| 朝香      |            3 |
+-----------+--------------+

(別解)テキストの解答
《解説》ORDER BY句を列番号で指定しても良い。(読みづらいけど)

SELECT 社員名, COUNT(*) AS 入室回数
FROM 入退室管理
GROUP BY 社員名
ORDER BY 2 DESC
;
+-----------+--------------+
| 社員名    | 入室回数     |
+-----------+--------------+
| 菅原      |           12 |
| 湊        |            5 |
| 朝香      |            3 |
+-----------+--------------+


(3)事由区分ごとの入室回数。事由区分は分かりやすい表記に変更。
《解説》分かりやすい表記に置き換え => CASE句

＊まずは CASE句のみ
SELECT DISTINCT
  CASE 事由区分 WHEN '1' THEN 'メンテナンス'
                WHEN '2' THEN 'リリース作業'
                WHEN '3' THEN '障害対応'
                WHEN '9' THEN 'その他'
  END AS 事由区分
FROM 入退室管理
;
+--------------------+
| 事由区分           |
+--------------------+
| メンテナンス       |
| リリース作業       |
| 障害対応           |
| その他             |
+--------------------+

《解説》事由区分ごとの回数を取得するのでグループ化 => GROUP BY 事由区分
《解答》
SELECT
  CASE 事由区分 WHEN '1' THEN 'メンテナンス'
                WHEN '2' THEN 'リリース作業'
                WHEN '3' THEN '障害対応'
                WHEN '9' THEN 'その他'
  END AS 事由区分,
  COUNT(*) AS 入室回数
FROM 入退室管理
GROUP BY 事由区分
;
+--------------------+--------------+
| 事由区分           | 入室回数     |
+--------------------+--------------+
| メンテナンス       |            9 |
| リリース作業       |            1 |
| 障害対応           |            7 |
| その他             |            3 |
+--------------------+--------------+


(4)入室回数10回超過の社員について、社員名と入室回数を取得。
《解説》
「入室回数10回超過」は社員ごとの集計後にしか分からない条件 => HAVING句

SELECT 社員名, COUNT(*) AS 入室回数
FROM 入退室管理
GROUP BY 社員名
HAVING COUNT(*) > 10
;
+-----------+--------------+
| 社員名    | 入室回数     |
+-----------+--------------+
| 菅原      |           12 |
+-----------+--------------+


(5)障害対応をした日付と、それぞれの障害に対応した社員数を取得。
《解説》
・「障害対応をした日付」=> WHERE 事由区分 = '3'
・それぞれの障害に対応した社員数 => COUNT(社員名)
・「GROUP BY 日付」をしないと、１行しか出ない
+-----------------------+--------------------------+
| 障害対応の日付        | 障害対応の社員数         |
+-----------------------+--------------------------+
| 2018-02-05            |                        7 |
+-----------------------+--------------------------+

《解答》
SELECT 日付 AS 障害対応の日付,
       COUNT(社員名) AS 障害対応の社員数
FROM 入退室管理
WHERE 事由区分 = '3'
GROUP BY 日付
;
+-----------------------+--------------------------+
| 障害対応の日付        | 障害対応の社員数         |
+-----------------------+--------------------------+
| 2018-02-05            |                        2 |
| 2018-02-13            |                        3 |
| 2018-02-17            |                        1 |
| 2018-02-18            |                        1 |
+-----------------------+--------------------------+


◆練習問題６－３
・検索結果がデコボコになるSQL文を選ぶ。
・結果表は長方形でなければならない。
・ＭySQLはエラーにならずに少ない行に合わせた結果表になるため、
  結果表が出たことに安心せず、適正な結果表になっているかチェックが必要。


